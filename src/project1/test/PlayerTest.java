package project1.test;
// Generated by ComTest BEGIN
import static org.junit.Assert.*;
import org.junit.*;
import project1.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2025.06.30 08:56:38 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PlayerTest {



  // Generated by ComTest BEGIN
  /** testPlayer29 */
  @Test
  public void testPlayer29() {    // Player: 29
    Player player1 = new Player("kaori"); 
    assertEquals("KAORI", player1.getName()); 
    assertEquals("From: Player line: 32", "Player name: KAORI | Best score: 10000", player1.toString()); 
    assertTrue(Player.isValidName("kaori")); 
    assertFalse(Player.isValidName(""));  // blank, invalid
    assertFalse(Player.isValidName(" "));  // blank, invalid
    assertFalse(Player.isValidName(null));  // null, invalid
    assertFalse(Player.isValidName("a".repeat(31)));  // too long, invalid
    Player player2 = new Player(null); 
    assertFalse(Player.isValidName(null)); 
    assertEquals("NEKO", player2.getName()); 
    assertEquals("From: Player line: 41", "Player name: NEKO | Best score: 10000", player2.toString()); 
    Player player3 = new Player("YUKO"); 
    assertEquals("YUKO", player3.getName()); 
    assertEquals("From: Player line: 44", "Player name: YUKO | Best score: 10000", player3.toString()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetName82 */
  @Test
  public void testGetName82() {    // Player: 82
    Player getNameTest = new Player(""); 
    assertEquals("NEKO", getNameTest.getName()); 
    Player getNameTest2 = new Player("uyHu"); 
    assertEquals("UYHU", getNameTest2.getName()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetBestScore96 */
  @Test
  public void testGetBestScore96() {    // Player: 96
    Player scoreTest = new Player("score"); 
    assertEquals(10000, scoreTest.getBestScore()); 
    scoreTest.isNewBest(10); assertEquals(10, scoreTest.getBestScore()); 
    scoreTest.isNewBest(24); assertEquals(10, scoreTest.getBestScore()); 
    scoreTest.isNewBest(-5); assertEquals(10, scoreTest.getBestScore()); 
  } // Generated by ComTest END
}