package project1.test;
// Generated by ComTest BEGIN
import static org.mockito.Mockito.*;
import static org.junit.Assert.*;
import org.junit.*;
import project1.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2025.06.30 10:02:27 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class GameControllerTest {



  // Generated by ComTest BEGIN
  /** testStart50 */
  @Test
  public void testStart50() {    // GameController: 50
    InputHandler mockIH = mock(InputHandler.class); 
    OutputHandler mockOH = mock(OutputHandler.class); 
    GameSession mockSession = mock(GameSession.class); 
    GameController controller = new GameController(mockIH, mockOH); 
    GameController spyController = spy(controller); 
    spyController.setSession(mockSession); 
    when(mockIH.wantToPlay()).thenReturn(true, true, false); 
    when(mockIH.readPlayerName()).thenReturn("Tester"); 
    when(mockSession.getPlayerName()).thenReturn("TESTER"); 
    doNothing().when(spyController).startSession(); 
    spyController.start(); 
    verify(spyController, times(2)).startSession(); 
    verify(mockSession).endSession(); 
    verify(mockIH).closeTheScanner(); 
    verify(mockOH).showEndMessage(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testStartSession103 */
  @Test
  public void testStartSession103() {    // GameController: 103
    InputHandler mockIH = mock(InputHandler.class); 
    OutputHandler mockOH = mock(OutputHandler.class); 
    GameSession mockSession = mock(GameSession.class); 
    GameController startTest = new GameController(mockIH, mockOH); 
    startTest.setSession(mockSession); 
    when(mockSession.pickNewNum()).thenReturn(10); 
    startTest.startSession(); 
    verify(mockSession).setAnswer(10); 
    verify(mockSession).playOneSession(); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGreetThePlayer129 */
  @Test
  public void testGreetThePlayer129() {    // GameController: 129
    InputHandler mockIH = mock(InputHandler.class); 
    OutputHandler mockOH = mock(OutputHandler.class); 
    GameSession mockSession = mock(GameSession.class); 
    GameController greetTest = new GameController(mockIH, mockOH); 
    when(mockIH.readPlayerName()).thenReturn("Neko"); 
    when(mockSession.getPlayerName()).thenReturn("NEKO"); 
    greetTest.greetThePlayer(); 
    verify(mockOH).warnInvalidName(); 
    verify(mockOH).greetThePlayer(eq(Player.getDefaultName())); 
  } // Generated by ComTest END
}